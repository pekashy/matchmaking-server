## systems.
## 
## Default: 500ms
## 
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
##   - the text "infinity"
## search.queue.batch.flush_interval = 500ms

## The queue high watermark. If the total number of queued messages in a
## Solr Queue Worker instance exceeds this limit, then the calling vnode
## will be blocked until the total number falls below this limit. This
## parameter exercises flow control between Riak and the Riak
## Search batching subsystem if writes into Solr start to fall behind.
## 
## Default: 1000
## 
## Acceptable values:
##   - an integer
## search.queue.high_watermark = 1000

## The strategy for how we handle purging when we hit the
## search.queue.high_watermark.
## - purge_one -> Removes the oldest item on the queue from an
## erroring (references to fuses blown in the code) index in
## order to get below the search.queue.high_watermark.
## - purge_index -> Removes all items associated with one random
## erroring (references to fuses blown in the code) index in
## order to get below the search.queue.high_watermark.
## - off -> purging is disabled
## 
## Default: purge_one
## 
## Acceptable values:
##   - one of: purge_one, purge_index, off
## search.queue.high_watermark.purge_strategy = purge_one

## Whether to allow Yokozuna queries on this node
## 
## Default: enabled
## 
## Acceptable values:
##   - enabled or disabled
## cluster.job.yokozuna.query = enabled

nodename = riak@localhost
distributed_cookie = riakkv
listener.protobuf.internal = localhost:8087
listener.http.internal = localhost8098
nodename = riak@localhost
distributed_cookie = riakkv
listener.protobuf.internal = localhost:8087
listener.http.internal = localhost:8098